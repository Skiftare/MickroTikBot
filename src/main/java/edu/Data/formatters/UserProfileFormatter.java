package edu.Data.formatters;

import edu.Data.dto.ClientTransfer;
import edu.Data.dto.UserInfo;
import java.util.Date;
import java.util.logging.Logger;

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 */
public final class UserProfileFormatter {

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
     *
     * @param userInfo –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     * @return –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    public String format(final UserInfo userInfo) {
        if (userInfo == null || userInfo.client() == null) {
            return "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω";
        }
        return formatClientInfo(userInfo);
    }

    private String formatClientInfo(final UserInfo userInfo) {
        ClientTransfer client = userInfo.client();

        StringBuilder result = new StringBuilder();
        result.append("üìã –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n");
        result.append("üÜî ID: ").append(client.tgUserId()).append("\n");
        result.append("üòé –í–∞—à —Å—Ç–∞—Ç—É—Å –≤ –°–∏—Å—Ç–µ–º–µ: ").append(userInfo.status().toString()).append("\n");

        if (client.name() != null) {
            result.append("üë§ –ò–º—è: ").append(client.name()).append("\n");
        }

        if (client.phone() != null) {
            result.append("üì± –¢–µ–ª–µ—Ñ–æ–Ω: ").append(client.phone()).append("\n");
        }
        if (client.balance() != null) {
            result.append("üí∞ –ë–∞–ª–∞–Ω—Å: ").append(client.balance()).append("\n");
        }

        if (client.vpnProfile() != null) {
            try {
                result.append("\nüîê VPN –ø—Ä–æ—Ñ–∏–ª—å: ").append(EncryptionUtil.decrypt(client.vpnProfile()));
            } catch (Exception e) {
                Logger.getAnonymousLogger().info("Exception: " + e.getMessage());
            }
            result.append("\n–°—Ç–∞—Ç—É—Å: ").append(client.isVpnProfileAlive() ? "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" : "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω");

            if (client.expiredAt() != null && client.expiredAt().getTime() != 0
                    && !(client.expiredAt().equals(new Date(0)))) {
                result.append("\n‚è∞ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: ").append(client.expiredAt());
            }
        }
        return result.toString();
    }
}
